{"remainingRequest":"/Users/arseniybelyakov/Desktop/todo-list-vue-master/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/arseniybelyakov/Desktop/todo-list-vue-master/src/components/TodoList.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/arseniybelyakov/Desktop/todo-list-vue-master/src/components/TodoList.vue","mtime":1558308196891},{"path":"/Users/arseniybelyakov/Desktop/todo-list-vue-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/arseniybelyakov/Desktop/todo-list-vue-master/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/arseniybelyakov/Desktop/todo-list-vue-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/arseniybelyakov/Desktop/todo-list-vue-master/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport TodoListItem from './TodoListItem';\n\n    export default {\n        components:{\n            TodoListItem\n        },\n        data() {\n            return{\n                items: [],\n                inputText: ''\n            }\n        },\n        created() {\n            this.items = JSON.parse(localStorage.getItem('todo-list')) || []\n        },\n        methods: {\n           \n            updateStorage(){\n                console.log(this.items);\n                \n                localStorage.setItem('todo-list',JSON.stringify(this.items));\n            },\n            \n            addItem() {\n                if(this.inputText === '') return;\n\n                const newItem = {\n                    done: false,\n                    text: this.inputText\n                }\n                this.items.push(newItem)\n                this.updateStorage()\n                this.inputText = '';\n            },\n            removeItem(index){\n                \n                this.items.splice(index, 1)\n                \n                this.updateStorage()\n            },\n            markAsDone(index){\n                this.items[index].done = !this.items[index].done;\n                this.updateStorage()\n                \n            },\n            editItemText(index, item){\n                this.items[index] = item;\n                this.updateStorage()\n            }\n        }\n    }\n",{"version":3,"sources":["TodoList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAkBA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","file":"TodoList.vue","sourceRoot":"src/components","sourcesContent":["<template>\n<div>\n    <div class=name><h1>Todo List App</h1></div>\n    <input @keyup.enter=\"addItem\" type=\"text\" v-model=\"inputText\" placeholder=\"gimme some text\">\n    <div class=\"addBtn\"><button @click=\"addItem\">Add new item</button></div>\n    <ul>\n        <todo-list-item \n            v-for=\"(item, index) in items\" :key=\"index\"\n            v-bind:item=\"item\"\n            @remove=\"removeItem(index)\"\n            @done=\"markAsDone(index)\" \n            @edit=\"editItemText\"/>\n    </ul>\n</div>\n\n</template>\n\n<script>\nimport TodoListItem from './TodoListItem';\n\n    export default {\n        components:{\n            TodoListItem\n        },\n        data() {\n            return{\n                items: [],\n                inputText: ''\n            }\n        },\n        created() {\n            this.items = JSON.parse(localStorage.getItem('todo-list')) || []\n        },\n        methods: {\n           \n            updateStorage(){\n                console.log(this.items);\n                \n                localStorage.setItem('todo-list',JSON.stringify(this.items));\n            },\n            \n            addItem() {\n                if(this.inputText === '') return;\n\n                const newItem = {\n                    done: false,\n                    text: this.inputText\n                }\n                this.items.push(newItem)\n                this.updateStorage()\n                this.inputText = '';\n            },\n            removeItem(index){\n                \n                this.items.splice(index, 1)\n                \n                this.updateStorage()\n            },\n            markAsDone(index){\n                this.items[index].done = !this.items[index].done;\n                this.updateStorage()\n                \n            },\n            editItemText(index, item){\n                this.items[index] = item;\n                this.updateStorage()\n            }\n        }\n    }\n</script>\n\n<style scoped>\n\n    .name{\n        background-color:#05386b;\n    }\n\n    input{\n        border: 1px solid #05386b;\n        background: #8ee4af;\n        border-radius: 15px;\n        padding: 5px 10px;\n        outline: none;\n        width: 470px;\n        height: 50px;\n        font-size: 2.5em;\n        text-align: center;\n        font-family: 'Trebuchet MS', 'Lucida Sans Unicode', 'Lucida Grande', 'Lucida Sans', Arial, sans-serif;\n        \n    }\n    \n    input:focus{\n        border: 1px solid #05386b;\n        background: #edf5e1;\n        border-radius: 20px;\n        text-align: center;\n        padding: 5px 10px;\n        outline: none;\n        width: 500px;\n        height: 50px;\n        font-size: 2.5em;\n        font-family: 'Trebuchet MS', 'Lucida Sans Unicode', 'Lucida Grande', 'Lucida Sans', Arial, sans-serif;\n    }\n    \n    h1{\n        font-size: 5em;\n        color:#edf5e1;\n        font-family: 'Trebuchet MS', 'Lucida Sans Unicode', 'Lucida Grande', 'Lucida Sans', Arial, sans-serif;\n    }\n\n    .addBtn{\n        background: #5cdb95;\n        outline: none;\n        margin-left: 50%;\n        transform: translateX(-50%);\n    }\n\n    button{\n        margin-top: 5px;\n        border: 2px solid #05386b;\n        background: #05386b;\n        color: #edf5e1;\n        border-radius: 10px;\n        outline: none;\n        font-size: 2em;\n        text-align: center;\n        font-family: 'Trebuchet MS', 'Lucida Sans Unicode', 'Lucida Grande', 'Lucida Sans', Arial, sans-serif;\n    }\n\n    \n    button:active{\n        border: 2px solid #edf5e1;\n        border-radius: 20px;\n        background: #379683;\n        color: #edf5e1;\n        outline: none;\n        font-size: 2em;\n        font-family: 'Trebuchet MS', 'Lucida Sans Unicode', 'Lucida Grande', 'Lucida Sans', Arial, sans-serif;\n    }\n\n    ul{\n        list-style: none;\n        padding: 0;\n    }\n</style>"]}]}